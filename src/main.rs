extern crate rand;

use std::io;
use std::cmp::Ordering;
use rand::Rng;

fn main() {
    println!();

    /*-------------------------Introduction to the game.-------------------------*/
    println!("   ---------------Welcome to Guess The Number!-------------------  ");
    println!("This is a simple CLI game, where you try to guess the number I have.");
    println!("   --------------------------------------------------------------  ");
    /*---------------------------------------------------------------------------*/

    println!();

    /*The number generated by the computer.*/
    let secret_number = rand::thread_rng().gen_range(1, 101);

    loop {
        /*Prompt the player to guess a number*/
        println!("Guess a number.");

        /*The player's guess.*/
        let mut guess = String::new();

        /*Accept the player's guess.*/
        io::stdin().read_line(&mut guess)
                   .expect("Failed to read line");

        /*Parse the player's guess into an integer.*/
        let guess: u32 = match guess.trim().parse() {
         	Ok(num) => num,
         	Err(_)  => continue,
         };

        println!("You guessed: {}", guess);

        /*Print the result to the player.*/
        match guess.cmp(&secret_number) {
        	Ordering::Less => {
                println!("Too small!");
                println!();
            },
        	Ordering::Greater => {
                println!("Too big!");
                println!();
            },
        	Ordering::Equal => {
        		println!("You win!");
        		break;
        	}
        }
    }
}